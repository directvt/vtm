name: Build VTM

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: ${{ matrix.platform }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ubuntu-22.04
            platform: linux
            arch: x86_64
            apt: g++-12 gcc-12 libncurses-dev
            cxx: /usr/bin/g++-12
            cc: /usr/bin/gcc-12
            flags: '-DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -Wall -Wextra -Werror"'
          
          - os: ubuntu-22.04
            platform: linux
            arch: x86
            apt: g++-12-i686-linux-gnu gcc-12-i686-linux-gnu libncurses-dev:i386
            cxx: /usr/bin/i686-linux-gnu-g++-12
            cc: /usr/bin/i686-linux-gnu-gcc-12
            flags: '-DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -Wall -Wextra -Werror"'
          
          - os: ubuntu-22.04
            platform: linux
            arch: arm64
            apt: g++-12-aarch64-linux-gnu gcc-12-aarch64-linux-gnu libncurses-dev:arm64
            cxx: /usr/bin/aarch64-linux-gnu-g++-12
            cc: /usr/bin/aarch64-linux-gnu-gcc-12
            flags: '-DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -Wall -Wextra -Werror"'
          
          - os: ubuntu-22.04
            platform: linux
            arch: arm32
            apt: g++-12-arm-linux-gnueabihf gcc-12-arm-linux-gnueabihf libncurses-dev:armhf
            cxx: /usr/bin/arm-linux-gnueabihf-g++-12
            cc: /usr/bin/arm-linux-gnueabihf-gcc-12
            flags: '-DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -Wall -Wextra -Werror"'
          
          # RISC-V build (emulated via QEMU)
          - os: ubuntu-22.04
            platform: linux
            arch: riscv64
            apt: g++-riscv64-linux-gnu gcc-riscv64-linux-gnu libncurses-dev:riscv64 qemu-user-static
            cxx: riscv64-linux-gnu-g++
            cc: riscv64-linux-gnu-gcc
            flags: '-DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -Wall -Wextra -Werror"'
          
          # Windows builds
          - os: windows-latest
            platform: windows
            arch: x86_64
            cxx: cl
            cc: cl
            flags: '-DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded" -DCMAKE_CXX_FLAGS_RELEASE="/MT /O2 /DNDEBUG /Zi /W4" -A x64'
          
          # macOS builds
          - os: macos-latest
            platform: macos
            arch: universal
            cxx: clang++
            cc: clang
            flags: '-DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0'

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU (RISC-V)
      if: matrix.arch == 'riscv64'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: riscv64

    - name: Install dependencies
      if: matrix.apt
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.apt }}
        if [ "${{ matrix.arch }}" = "riscv64" ]; then
          sudo apt-get install -y qemu-user-static
        fi

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
          -DCMAKE_C_COMPILER=${{ matrix.cc }} \
          ${{ matrix.flags }} \
          -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        make -j$(nproc)

    - name: Package artifact
      run: |
        mkdir -p dist
        if [ "${{ runner.os }}" = "Windows" ]; then
          cp build/Release/vtm.exe dist/vtm-${{ matrix.platform }}-${{ matrix.arch }}.exe
        else
          cp build/vtm dist/vtm-${{ matrix.platform }}-${{ matrix.arch }}
          strip dist/vtm-${{ matrix.platform }}-${{ matrix.arch }}
          tar -czvf dist/vtm-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz -C dist vtm-${{ matrix.platform }}-${{ matrix.arch }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vtm-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/vtm-${{ matrix.platform }}-${{ matrix.arch }}*